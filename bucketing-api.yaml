openapi: 3.0.0
info:
  title: DevCycle Bucketing API
  description:
    Documents the DevCycle Bucketing API (https://bucketing-api.devcycle.com/) which provides an API interface to
    User Bucketing and for generated SDKs.
  version: 1.1.0
servers:
  - url: https://bucketing-api.devcycle.com/
tags:
  - name: EdgeDB
  - name: Bucketing API
  - name: Feature Opt-in
paths:
  /v1/variables/{key}:
    post:
      summary: Get variable by key for user data
      tags:
        - Bucketing API
      operationId: 'getVariableByKey'
      security:
        - bearerAuth: []
      parameters:
        - name: key
          in: path
          description: Variable key
          required: true
          schema:
            type: string

      requestBody:
        $ref: '#/components/requestBodies/UserRequestBody'

      responses:
        200:
          description: Variable response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'

  /v1/variables:
    post:
      summary: Get all variables by key for user data
      tags:
        - Bucketing API
      security:
        - bearerAuth: []
      operationId: 'getVariables'
      requestBody:
        $ref: '#/components/requestBodies/UserRequestBody'
      responses:
        200:
          description: Variables response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/Variable'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'

  /v1/features:
    post:
      summary: Get all features by key for user data
      tags:
        - Bucketing API
      operationId: 'getFeatures'
      security:
        - bearerAuth: []
      requestBody:
        $ref: '#/components/requestBodies/UserRequestBody'
      responses:
        200:
          description: Feature response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/Feature'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'

  /v1/track:
    post:
      summary: Post events to DevCycle for user
      tags:
        - Bucketing API
      security:
        - bearerAuth: []
      operationId: 'postEvents'
      requestBody:
        $ref: '#/components/requestBodies/TrackRequestBody'
      responses:
        201:
          description: Feature response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'

  /v1/edgedb/{id}:
    patch:
      summary: Update EdgeDB data based on unique id and project id
      tags:
        - EdgeDB
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: A unique id used to fetch and update the EdgeDB data
        - name: envKey
          in: query
          description: Environment Key as defined in the dashboard for your DevCycle environment.
            One of the Authorization header or "envKey" query parameter is required to be set.
          required: false
          schema:
            type: string
      
      requestBody:
        description: User properties to update the EdgeDB data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDataEdgeDB'

      responses:
        200:
          description: Client SDK API Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdgeDBApiResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /v1/optInConfig:
    get:
      summary: Fetch opt-in config
      description: Fetch a project config to display features available for Opt-in
      tags:
        - Feature Opt-in
      parameters:
        - name: envKey
          in: query
          description: Environment Key as defined in the dashboard for your DevCycle environment.
            One of the Authorization header or "envKey" query parameter is required to be set.
          required: false
          schema:
            type: string
        - name: user_id
          in: query
          description: Unique id to identify the user
          required: true
          schema:
            type: string
      responses:
        200:
          description: Opt-in Config Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptInConfigResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /v1/optIns/:user_id:
    put:
      summary: Update opt-in preferences for a user
      tags:
        - Feature Opt-in
      parameters:
        - name: envKey
          in: query
          description: Environment Key as defined in the dashboard for your DevCycle environment.
            One of the Authorization header or "envKey" query parameter is required to be set.
          required: false
          schema:
            type: string
      requestBody:
        description: A map of variable keys to boolean values, true if the user has opted in, false otherwise
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserOptInData'
      responses:
        200:
          description: Opt-in Config Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptInConfigResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        500:
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    bearerAuth:
      type: apiKey
      in: header
      name: Authorization
      description: 'Enter your DevCycle SDK token'

  schemas:
    UserDataEdgeDB:
      type: object
      properties:
        user_id:
          description: Unique id to identify the user
          type: string

        email:
          description: User's email used to identify the user on the dashaboard / target audiences
          type: string
        
        name:
          description: User's name used to idenify the user on the dashaboard / target audiences
          type: string

        language:
          description: User's language in ISO 639-1 format
          additionalProperties:
            type: string
            maxLength: 2
          
        country:
          description: User's country in ISO 3166 alpha-2 format
          additionalProperties:
            type: string
            maxLength: 2

        customData:
          description: User's custom data to target the user with, data will be logged to DevCycle for use in dashboard.
          type: object
            
        lastSeenDate:
          description: Date the user was last seen being used, Unix epoch timestamp format
          type: number
            
      required:
        - user_id

    UserData:
      type: object
      properties:
        user_id:
          type: string
          description: Unique id to identify the user
        email:
          type: string
          description: User's email used to identify the user on the dashboard / target audiences
        name:
          type: string
          description: User's name used to identify the user on the dashboard / target audiences
        language:
          type: string
          description: User's language in ISO 639-1 format
          maxLength: 2
        country:
          type: string
          description: User's country in ISO 3166 alpha-2 format
          maxLength: 2
        appVersion:
          type: string
          description: App Version of the running application
        appBuild:
          type: string
          description: App Build number of the running application
        customData:
          type: object
          description: User's custom data to target the user with, data will be logged to DevCycle for use in dashboard.
        privateCustomData:
          type: object
          description:
            User's custom data to target the user with, data will not be logged to DevCycle
            only used for feature bucketing.
        createdDate:
          type: number
          description: Date the user was created, Unix epoch timestamp format
        lastSeenDate:
          type: number
          description: Date the user was created, Unix epoch timestamp format
        platform:
          type: string
          description: Platform the Client SDK is running on
        platformVersion:
          type: string
          description: Version of the platform the Client SDK is running on
        deviceModel:
          type: string
          description: User's device model
        sdkType:
          type: string
          description: DevCycle SDK type
          enum: [api, server]
        sdkVersion:
          type: string
          description: DevCycle SDK Version
      required:
        - user_id

    UserDataAndEventsBody:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
        user:
          $ref: '#/components/schemas/UserData'

    UserOptInData:
      type: object
      additionalProperties:
        type: boolean


    Feature:
      type: object
      properties:
        _id:
          type: string
          description: unique database id
        key:
          type: string
          description: Unique key by Project, can be used in the SDK / API to reference by 'key' rather than _id.
        type:
          type: string
          description: Feature type
          enum: [ 'release', 'experiment', 'permission', 'ops' ]
        _variation:
          type: string
          description: Bucketed feature variation ID
        variationName:
          type: string
          description: Bucketed feature variation Name
        variationKey:
          type: string
          description: Bucketed feature variation Key
        evalReason:
          type: string
          description: Evaluation reasoning
      required:
        - _id
        - key
        - type
        - _variation

    Variable:
      type: object
      properties:
        _id:
          type: string
          description: unique database id
        key:
          type: string
          description: Unique key by Project, can be used in the SDK / API to reference by 'key' rather than _id.
        type:
          type: string
          description: Variable type
          enum: [ 'String', 'Boolean', 'Number', 'JSON' ]
        value:
          type: object
          description: Variable value can be a string, number, boolean, or JSON
      required:
        - _id
        - key
        - type
        - value

    Event:
      type: object
      properties:
        type:
          type: string
          description: Custom event type
        target:
          type: string
          description: Custom event target / subject of event. Contextual to event type
        date:
          type: number
          description: Unix epoch time the event occurred according to client
        value:
          type: number
          description: Value for numerical events. Contextual to event type
        metaData:
          type: object
          description: Extra JSON metadata for event. Contextual to event type
      required:
        - type

    EdgeDBApiResponse:
      type: object
      properties:
        message:
          description: Response message of the request
          type: string
      required:
        - message

    OptInConfigResponse:
      type: object
      properties:
        message:
          description: Response message of the request
          type: string
      required:
        - message

    ErrorResponse:
      type: object
      properties:
        statusCode:
          type: number
          description: Error response status code
        message:
          type: string
          description: Error message
        data:
          type: object
          description: Additional error information detailing the error reasoning
      required:
        - message

  requestBodies:
    UserRequestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserData'

    TrackRequestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserDataAndEventsBody'

  responses:
    # 400
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    # 401
    UnauthorizedError:
      description: Missing 'envKey' query parameter or 'Authorization' header
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    # 404
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    # 500
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
